<!--
  NodeEditor A node editor control for Avalonia.
  Copyright (C) 2023  Wiesław Šoltés
  
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:NodeEditor.Model;assembly=NodeEditorAvalonia.Model"
                    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
                    xmlns:behaviors="clr-namespace:NodeEditor.Behaviors"
                    xmlns:controls="clr-namespace:NodeEditor.Controls"
                    x:CompileBindings="True">

  <ControlTheme x:Key="{x:Type controls:Nodes}" TargetType="controls:Nodes">

    <Setter Property="ClipToBounds" Value="False" />

    <Setter Property="Template">
      <ControlTemplate x:DataType="m:IDrawingNode">
        <ItemsControl Name="PART_NodesItemsControl"
                      ItemsSource="{Binding Nodes}" 
                      Width="{Binding Width}" 
                      Height="{Binding Height}"
                      Background="Transparent"
                      ClipToBounds="False">
          <i:Interaction.Behaviors>
            <behaviors:NodesSelectedBehavior />
            <!-- TODO: Fix using $parent[controls:DrawingNode] -->
            <behaviors:DrawingSelectionBehavior InputSource="{Binding $parent[controls:DrawingNode].InputSource}" 
                                                AdornerCanvas="{Binding $parent[controls:DrawingNode].AdornerCanvas}" 
                                                EnableSnap="{Binding $parent[controls:DrawingNode].EnableSnap}" 
                                                SnapX="{Binding $parent[controls:DrawingNode].SnapX}" 
                                                SnapY="{Binding $parent[controls:DrawingNode].SnapY}" 
                                                x:CompileBindings="False" />
            <behaviors:DrawingPressedBehavior />
            <behaviors:DrawingMovedBehavior />
          </i:Interaction.Behaviors>
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter" x:DataType="m:INode">
              <Setter Property="Canvas.Left" Value="{Binding X}" />
              <Setter Property="Canvas.Top" Value="{Binding Y}" />
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Canvas />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="m:INode">
              <controls:Node Name="PART_Node" />
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ControlTemplate>
    </Setter>

  </ControlTheme>

</ResourceDictionary>
