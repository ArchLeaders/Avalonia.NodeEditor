<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:NodeEditor.Controls"
                    xmlns:converters="clr-namespace:NodeEditor.Converters"
                    xmlns:m="clr-namespace:NodeEditor.Model;assembly=NodeEditorAvalonia.Model"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type controls:Pin}" TargetType="controls:Pin">

        <Setter x:DataType="m:IPin" Property="Width" Value="{Binding Width}" />
        <Setter x:DataType="m:IPin" Property="Height" Value="{Binding Height}" />
        <Setter x:DataType="m:IPin" Property="Margin" Value="{Binding Converter={x:Static converters:PinMarginConverter.Instance}}" />
        <Setter Property="ClipToBounds" Value="False" />

        <Setter Property="Template">
            <ControlTemplate x:DataType="m:IPin">
                <Ellipse Name="PART_Pin"
                         Width="{Binding Width}"
                         Height="{Binding Height}" />
            </ControlTemplate>
        </Setter>

        <Setter Property="(ToolTip.Tip)">
            <Template>
                <TextBlock x:DataType="m:IPin" Text="{Binding Name}" />
            </Template>
        </Setter>

        <Setter Property="ContextFlyout">
            <Setter.Value>
                <Flyout x:DataType="m:IPin">
                    <DockPanel>
                        <Label Content="Name:" DockPanel.Dock="Top" />
                        <TextBox DockPanel.Dock="Top" Text="{Binding Name}" />
                        <Label Content="Alignment:" DockPanel.Dock="Top" />
                        <RadioButton Content="None"
                                     DockPanel.Dock="Top"
                                     GroupName="Alignment"
                                     IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.None}}" />
                        <RadioButton Content="Left"
                                     DockPanel.Dock="Top"
                                     GroupName="Alignment"
                                     IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Left}}" />
                        <RadioButton Content="Right"
                                     DockPanel.Dock="Top"
                                     GroupName="Alignment"
                                     IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Right}}" />
                        <RadioButton Content="Top"
                                     DockPanel.Dock="Top"
                                     GroupName="Alignment"
                                     IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Top}}" />
                        <RadioButton Content="Bottom"
                                     DockPanel.Dock="Top"
                                     GroupName="Alignment"
                                     IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Bottom}}" />
                    </DockPanel>
                </Flyout>
            </Setter.Value>
        </Setter>

        <Style Selector="^/template/ Ellipse#PART_Pin">
            <Setter Property="Fill" Value="{DynamicResource PinBackgroundBrush}" />
            <Setter Property="Stroke" Value="{DynamicResource PinForegroundBrush}" />
            <Setter Property="StrokeThickness" Value="2" />
        </Style>

        <Style Selector="^:pointerover /template/ Ellipse#PART_Pin">
            <Setter Property="Fill" Value="{DynamicResource PinPointerOverBackgroundBrush}" />
            <Setter Property="Stroke" Value="{DynamicResource PinPointerOverForegroundBrush}" />
            <Setter Property="StrokeThickness" Value="2" />
        </Style>

    </ControlTheme>
</ResourceDictionary>
